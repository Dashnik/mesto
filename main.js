(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._selector=e,this._cardimage=n.link,this._cardTitle=n.name,this._cardLikes=n.likes,this._cardId=n._id,this._handleCardClick=r,this._handleTrashClick=o,this._handleLikeClick=i}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.cloneNode(!0)}},{key:"_deleteCardHandler",value:function(e){e.target.parentNode.remove()}},{key:"_likeCardHandler",value:function(e){e.target.classList.toggle("card__like_active")}},{key:"_setListeners",value:function(){var e=this;this._element.querySelector(".card__trash").addEventListener("click",this._handleTrashClick),this._element.querySelector(".card__image").addEventListener("click",(function(){e._handleCardClick(e._cardimage,e._cardTitle)})),this._element.querySelector(".card__like").addEventListener("click",(function(t){t.target.classList.toggle("card__like_active"),e._handleLikeClick(e._cardId)}))}},{key:"getElement",value:function(){this._element=this._getTemplate(),this._element.querySelector(".card").id=this._cardId;var e=this._element.querySelector(".card__image");return e.src=this._cardimage,e.alt=this._cardTitle,this._element.querySelector(".card__counter-like").textContent=this._cardLikes.length,this._element.querySelector(".card__title").textContent=this._cardTitle,this._setListeners(),this._element}}])&&e(n.prototype,r),t}(),n=document.querySelector(".overlay"),r={formSelector:".popup_edit-user-profile",formSelectorCard:".popup_cards",formProfileInputsSelector:".popup__input_type_error",formProfileInputsErrorsSelector:".popup__input-error",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__submit_inactive",errorClass:"popup__input-error_active",inputErrorClass:"popup__input_type_error"};function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSelector=t,this._formElement=document.querySelector(t),this._object=n,this._inputSelector=n.inputSelector,this._submitButtonSelector=n.submitButtonSelector,this._inactiveButtonClass=n.inactiveButtonClass,this._errorClass=n.errorClass,this._inputErrorClass=n.inputErrorClass}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t,n){var r=e.querySelector("#".concat(t.id,"-error"));r.textContent=n,r.classList.add(this._object.errorClass),t.classList.add(this._object.inputErrorClass)}},{key:"_hideInputError",value:function(e,t){var n=e.querySelector("#".concat(t.id,"-error"));n.textContent="",n.classList.remove(this._object.errorClass),t.classList.remove(this._object.inputErrorClass)}},{key:"_getErrorMessage",value:function(e){return e.validationMessage}},{key:"_checkInputValidity",value:function(e,t){if(t.validity.valid)this._hideInputError(e,t);else{var n=this._getErrorMessage(t);this._showInputError(e,t,n)}}},{key:"_hasInValidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){t?(e.classList.add(this._object.inactiveButtonClass),e.setAttribute("disabled",!0)):(e.classList.remove(this._object.inactiveButtonClass),e.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(e){var t=this,n=Array.from(e.querySelectorAll(this._object.inputSelector)),r=e.querySelector(this._object.submitButtonSelector);n.forEach((function(o){o.addEventListener("input",(function(){t._checkInputValidity(e,o);var i=t._hasInValidInput(n);t._toggleButtonState(r,i)}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners(this._formElement,this._object)}},{key:"clearProfileErrors",value:function(){var e=document.querySelectorAll(r.formProfileInputsSelector),t=document.querySelector(r.submitButtonSelector),n=document.querySelectorAll(r.formProfileInputsErrorsSelector);0!==e.length&&(e.forEach((function(e){e.classList.remove(r.inputErrorClass)})),t.classList.remove(r.inactiveButtonClass),0!==n.length&&n.forEach((function(e){e.classList.remove(r.errorClass)})))}}])&&o(t.prototype,n),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._containerSelector=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._containerSelector.append(e)}}])&&c(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this.setEventListeners=this.setEventListeners.bind(this)}var t,r;return t=e,(r=[{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),n.classList.add("overlay_visible"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),n.classList.remove("overlay_visible"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){e.preventDefault(),"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){t.target.classList.contains("popup__close")&&e.close()})),n.addEventListener("click",(function(t){t.target===t.currentTarget&&e.close()}))}}])&&a(t.prototype,r),e}();function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(e,t,n){return(h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=v(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function y(e,t){return!t||"object"!==l(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function v(e){return(v=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=v(r);if(o){var n=v(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function c(){return f(this,c),i.apply(this,arguments)}return t=c,(n=[{key:"open",value:function(e,t){h(v(c.prototype),"open",this).call(this);var n=this._popupElement.querySelector(".popup__image");n.alt=t,n.src=e,this._popupElement.querySelector(".popup__caption").textContent=t}}])&&p(t.prototype,n),c}(s);function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(e,t,n){return(g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function E(e,t){return(E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function S(e,t){return!t||"object"!==m(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function k(e){return(k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&E(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._handleFormSubmit=t,n}return t=c,(n=[{key:"_getInputValues",value:function(){var e={};return this._popupElement.querySelectorAll(".popup__input").forEach((function(t){e[t.name]=t.value})),e.likes="",e}},{key:"renderLoading",value:function(e){this._popupElement.querySelector(".popup__submit").innerHTML=e?"Сохранение...":"Сохранить"}},{key:"setEventListeners",value:function(){var e=this;g(k(c.prototype),"setEventListeners",this).call(this),this._popupElement.addEventListener("submit",(function(t){t.preventDefault(),e.renderLoading(!0),e._handleFormSubmit(e._getInputValues()),e.close(),e.renderLoading(!1)}))}},{key:"close",value:function(){g(k(c.prototype),"close",this).call(this)}}])&&b(t.prototype,n),c}(s);function w(e){return(w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(e,t,n){return(j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function O(e,t){return(O=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function P(e,t){return!t||"object"!==w(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function I(e){return(I=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&O(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._handleFormSubmit=t,n}return t=c,(n=[{key:"_getInputValues",value:function(){var e={};return this._popupElement.querySelectorAll(".popup__input").forEach((function(t){e[t.name]=t.value})),e}},{key:"_deleteCard",value:function(e){}},{key:"setEventListeners",value:function(){var e=this;j(I(c.prototype),"setEventListeners",this).call(this),this._popupElement.addEventListener("submit",(function(t){t.preventDefault(),_deleteCard(cardID),e.close()}))}}])&&L(t.prototype,n),c}(s);function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selectorName=t,this._selectorDescription=n}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._selectorName.textContent,userDescription:this._selectorDescription.textContent}}},{key:"setUserInfo",value:function(e,t){var n=e.value,r=t.value;this._selectorName.textContent=n,this._selectorDescription.textContent=r}}])&&T(t.prototype,n),e}();function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var x=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers}var t,n;return t=e,(n=[{key:"getProfileInfo",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(e){return e.json()})).then((function(e){return e}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(e){return e.json()})).then((function(e){return e}))}},{key:"changeProfile",value:function(e){return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Server error")})).then((function(e){return e})).catch((function(e){alert(e)}))}},{key:"postCardOnTheServer",value:function(e){return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Server error")})).then((function(e){return e})).catch((function(e){alert(e)}))}},{key:"changeAvatar",value:function(e){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Server error")})).then((function(e){return e})).catch((function(e){alert(e)}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this.baseUrl,"/").concat(id),{method:"DELETE",headers:this.headers,body:JSON.stringify(e)}).then((function(e){return e.ok?e.json():Promise.reject("Server error")})).then((function(e){return e})).catch((function(e){alert(e)}))}},{key:"putLike",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Server error")})).then((function(e){return e})).catch((function(e){alert(e)}))}},{key:"deleteLike",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Server error")})).then((function(e){return e})).catch((function(e){alert(e)}))}}])&&D(t.prototype,n),e}(),U=document.querySelector(".profile__name-edit"),B=document.querySelector(".profile__vector"),A=document.querySelector(".elements"),N=document.querySelector(".profile__name"),V=document.querySelector(".profile__description"),H=document.querySelector(".popup__item_profile_name"),J=document.querySelector(".popup__item_profile_job"),M=document.querySelector(".popup_cards__submit"),F=document.querySelector(".profile__image"),z=document.querySelector(".profile__photo_container"),G=new x({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-17",headers:{authorization:"2be0f169-5c86-4181-b303-3b009feba466","Content-Type":"application/json"}}),K=new C(".popup_type_editing_photo_profile",(function(e){G.changeAvatar(e),F.src=e.avatar}));K.setEventListeners(),z.addEventListener("click",(function(){K.open()}));var Q=new q(".popup_type_removing_card",(function(e){e.remove()}));function W(e){e.target.parentNode,Q.open()}Q.setEventListeners(),G.getProfileInfo().then((function(e){F.src=e.avatar,N.textContent=e.name,V.textContent=e.about}));var X=new R(N,V),Y=new C(".popup_edit-user-profile",(function(){var e={name:H.value,about:J.value};G.changeProfile(e),X.setUserInfo(H,J),Y.close()}));U.addEventListener("click",(function(){Y.open(),ee.clearProfileErrors();var e=X.getUserInfo();H.value=e.userName,J.value=e.userDescription})),Y.setEventListeners();var Z=new C(".popup_cards",(function(e){var t=$(e);G.postCardOnTheServer(e),A.prepend(t),M.classList.add(r.inactiveButtonClass)}));function $(e){return new t(".card-template",e,ne,W,re).getElement()}B.addEventListener("click",(function(){Z.open(),M.classList.add(r.inactiveButtonClass)})),Z.setEventListeners();var ee=new i(r.formSelector,r);ee.enableValidation(),new i(r.formSelectorCard,r).enableValidation();var te=new _(".popup_type_image");function ne(e,t){te.open(e,t)}function re(e){G.getInitialCards().then((function(t){t.forEach((function(t){e===t._id&&console.log("It works.Card likes is "+t.likes.length)}))}))}te.setEventListeners(),G.getInitialCards().then((function(e){var n=new u({items:e,renderer:function(e){if("2911d40eec43f0326fe3701b"===e.owner._id){var r=$(e);n.addItem(r)}else{var o=function(e){return new t(".card-template-without-Trash-Icon",e,ne,W,re).getElement()}(e);n.addItem(o)}}},A);n.renderItems()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
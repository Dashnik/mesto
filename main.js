(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._selector=e,this._cardimage=n.link,this._cardTitle=n.name,this._cardLikes=n.likes,this._cardId=n._id,this._ownerId=n.owner._id,this._handleCardClick=r,this._handleTrashClick=o,this._apiPraktikum=i}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.cloneNode(!0)}},{key:"_deleteCardHandler",value:function(e){e.target.parentNode.remove()}},{key:"_likeCardHandler",value:function(e){e.target.classList.toggle("card__like_active")}},{key:"_setListeners",value:function(){var e=this;this._element.querySelector(".card__trash").addEventListener("click",(function(t){var n=t.target.parentNode;e._handleTrashClick(n)})),this._element.querySelector(".card__image").addEventListener("click",(function(){e._handleCardClick(e._cardimage,e._cardTitle)})),this._element.querySelector(".card__like").addEventListener("click",(function(t){t.target.classList.toggle("card__like_active");var n=t.target.parentNode,r=n.querySelector(".card__like_active"),o=n.querySelector(".card__counter-like");e._handleCountLikes(e._cardId,o,r)}))}},{key:"_handleCountLikes",value:function(e,t,n){null==n?this._apiPraktikum.deleteLike(e).then((function(e){t.textContent=e.likes.length})):this._apiPraktikum.putLike(e).then((function(e){t.textContent=e.likes.length}))}},{key:"getElement",value:function(){var e=this;this._element=this._getTemplate(),this._element.querySelector(".card").id=this._cardId;var t=this._element.querySelector(".card__image"),n=this._element.querySelector(".card__counter-like"),r=this._element.querySelector(".card__trash");return t.src=this._cardimage,t.alt=this._cardTitle,n.textContent=this._cardLikes.length,this._element.querySelector(".card__title").textContent=this._cardTitle,this._apiPraktikum.getProfileInfo().then((function(t){e._ownerId!==t._id&&(r.src="",r.alt="")})),this._setListeners(),this._element}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=document.querySelector(t),this._object=n,this._inputSelector=n.inputSelector,this._submitButtonSelector=n.submitButtonSelector,this._inactiveButtonClass=n.inactiveButtonClass,this._errorClass=n.errorClass,this._inputErrorClass=n.inputErrorClass,this._formProfileInputsSelector=n.formProfileInputsSelector,this._formProfileInputsErrorsSelector=n.formProfileInputsErrorsSelector}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e,t,n){var r=e.querySelector("#".concat(t.id,"-error"));r.textContent=n,r.classList.add(this._object.errorClass),t.classList.add(this._object.inputErrorClass)}},{key:"_hideInputError",value:function(e,t){var n=e.querySelector("#".concat(t.id,"-error"));n.textContent="",n.classList.remove(this._object.errorClass),t.classList.remove(this._object.inputErrorClass)}},{key:"_getErrorMessage",value:function(e){return e.validationMessage}},{key:"_checkInputValidity",value:function(e,t){if(t.validity.valid)this._hideInputError(e,t);else{var n=this._getErrorMessage(t);this._showInputError(e,t,n)}}},{key:"_hasInValidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){t?(e.classList.add(this._object.inactiveButtonClass),e.setAttribute("disabled",!0)):(e.classList.remove(this._object.inactiveButtonClass),e.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(e){var t=this,n=Array.from(e.querySelectorAll(this._object.inputSelector)),r=e.querySelector(this._object.submitButtonSelector);n.forEach((function(o){o.addEventListener("input",(function(){t._checkInputValidity(e,o);var i=t._hasInValidInput(n);t._toggleButtonState(r,i)}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners(this._formElement,this._object)}},{key:"clearProfileErrors",value:function(){var e=this,t=document.querySelectorAll(this._formProfileInputsSelector),n=document.querySelector(this._submitButtonSelector),r=document.querySelectorAll(this._formProfileInputsErrorsSelector);0!==t.length&&(t.forEach((function(t){t.classList.remove(e._inputErrorClass)})),n.classList.remove(this._inactiveButtonClass),0!==r.length&&r.forEach((function(t){t.classList.remove(e._errorClass)})))}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._containerSelector=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e,t){t?this._containerSelector.append(e):this._containerSelector.prepend(e)}}])&&o(t.prototype,n),e}(),a={formSelector:".popup_type_edit-user-profile",formSelectorCard:".popup_type_new-cards",formProfileInputsSelector:".popup__input_type_error",formProfileInputsErrorsSelector:".popup__input-error",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__submit_inactive",errorClass:"popup__input-error_active",inputErrorClass:"popup__input_type_error"},c=".overlay",u=document.querySelector(".profile__name-edit"),s=document.querySelector(".profile__vector"),l=document.querySelector(".elements"),f=document.querySelector(".profile__name"),p=document.querySelector(".profile__description"),h=document.querySelector(".popup__item_profile_name"),d=document.querySelector(".popup__item_profile_job"),y=document.querySelector(".popup_cards__submit"),_=document.querySelector(".profile__image"),v=document.querySelector(".profile__photo_container");function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var b=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._overlay=document.querySelector(n)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),this._overlay.classList.add("overlay_visible"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),this._overlay.classList.remove("overlay_visible"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){e.preventDefault(),"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){t.target.classList.contains("popup__close")&&e.close()})),this._overlay.addEventListener("click",(function(t){t.target===t.currentTarget&&e.close()}))}},{key:"renderLoading",value:function(e){this._popupElement.querySelector(".popup__submit").innerHTML=e?"Сохранение...":"Сохранить"}}])&&m(t.prototype,n),e}();function g(e){return(g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(e,t,n){return(S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function E(e,t){return(E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function w(e,t){return!t||"object"!==g(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function C(e){return(C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&E(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e,t))._popupImageBigImageElement=n._popupElement.querySelector(".popup__image"),n._popupCaptionImageBigImageElement=n._popupElement.querySelector(".popup__caption"),n}return t=a,(n=[{key:"open",value:function(e,t){S(C(a.prototype),"open",this).call(this),this._popupImageBigImageElement.alt=t,this._popupImageBigImageElement.src=e,this._popupCaptionImageBigImageElement.textContent=t}}])&&k(t.prototype,n),a}(b);function P(e){return(P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(e,t,n){return(I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function j(e,t){return(j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function q(e,t){return!t||"object"!==P(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function R(e){return(R=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&j(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(r);if(o){var n=R(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return q(this,e)});function a(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e,t))._handleFormSubmit=n,r}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._popupElement.querySelectorAll(".popup__input").forEach((function(t){e[t.name]=t.value})),e.likes=[],e.owner={_id:"2911d40eec43f0326fe3701b"},e}},{key:"setEventListeners",value:function(){var e=this;I(R(a.prototype),"setEventListeners",this).call(this),this._popupElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){I(R(a.prototype),"close",this).call(this),this._popupElement.reset()}}])&&O(t.prototype,n),a}(b);function D(e){return(D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function B(e,t,n){return(B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=N(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function U(e,t){return(U=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function A(e,t){return!t||"object"!==D(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function N(e){return(N=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var V=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&U(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=N(r);if(o){var n=N(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return A(this,e)});function a(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e,t)).handleFormWithDeleteSubmit=n,r}return t=a,(n=[{key:"setEventListeners",value:function(e){var t=this;B(N(a.prototype),"setEventListeners",this).call(this),this._popupElement.addEventListener("submit",(function(n){n.preventDefault(),t.handleFormWithDeleteSubmit(e)}))}}])&&x(t.prototype,n),a}(b);function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var H=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selectorName=t,this._selectorDescription=n,this.apiPraktikum=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._selectorName.textContent,userDescription:this._selectorDescription.textContent}}},{key:"setUserInfo",value:function(e,t){var n=e.value,r=t.value;this._selectorName.textContent=n,this._selectorDescription.textContent=r}},{key:"getUserInfoFromServer",value:function(){var e=this,t=document.querySelector(".profile__image");this.apiPraktikum.getProfileInfo().then((function(n){t.src=n.avatar,e._selectorName.textContent=n.name,e._selectorDescription.textContent=n.about})).catch((function(e){console.error(e)}))}}])&&F(t.prototype,n),e}();function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function J(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function W(e){K.open(),K.setEventListeners(e)}function z(e,t){ee.open(e,t)}var $=new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers}var t,n;return t=e,(n=[{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getProfileInfo",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(t){return e._getResponseData(t)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(t){return e._getResponseData(t)}))}},{key:"setNewProfile",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify(e)}).then((function(e){return t._getResponseData(e)}))}},{key:"postCardOnTheServer",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify(e)}).then((function(e){return t._getResponseData(e)}))}},{key:"changeAvatar",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify(e)}).then((function(e){return t._getResponseData(e)}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this.headers})}},{key:"putLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then((function(e){return t._getResponseData(e)})).then((function(e){return e}))}},{key:"deleteLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return t._getResponseData(e)})).then((function(e){return e}))}}])&&M(t.prototype,n),e}())({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-17",headers:{authorization:"2be0f169-5c86-4181-b303-3b009feba466","Content-Type":"application/json"}}),G=new T(".popup_type_edit-user-profile",c,(function(){var e={name:h.value,about:d.value};G.renderLoading(!0),$.setNewProfile(e).then((function(){X.setUserInfo(h,d),G.close()})).finally((function(){G.renderLoading(!1)}))})),K=new V(".popup_type_removing_card",c,(function(e){$.deleteCard(e.id).then((function(){console.log("It is success"),e.remove()})).catch((function(e){console.log("It is error"),console.log(e)})).finally((function(){K.close()}))})),Q=new T(".popup_type_editing_photo_profile",c,(function(e){Q.renderLoading(!0),$.changeAvatar(e).then((function(){_.src=e.avatar,Q.close()})).catch((function(e){console.log(e)})).finally((function(){Q.renderLoading(!1)}))})),X=new H(f,p,$),Y=new i({renderer:function(e){var t=te(e);Y.addItem(t,!0)}},l),Z=new T(".popup_type_new-cards",c,(function(e){var t=te(e);Z.renderLoading(!0),$.postCardOnTheServer(e).then((function(){Y.addItem(t),y.classList.add(a.inactiveButtonClass),Z.close()})).finally((function(){Z.renderLoading(!1)}))})),ee=new L(".popup_type_image",c);function te(e){return new t(".card-template",e,z,W,$).getElement()}Q.setEventListeners(),G.setEventListeners(),Z.setEventListeners(),ee.setEventListeners(),v.addEventListener("click",(function(){Q.open()})),u.addEventListener("click",(function(){G.open(),ne.clearProfileErrors();var e=X.getUserInfo();h.value=e.userName,d.value=e.userDescription})),s.addEventListener("click",(function(){Z.open(),ne.clearProfileErrors(),y.classList.add(a.inactiveButtonClass)})),v.addEventListener("click",(function(){Q.open()}));var ne=new r(a.formSelector,a);ne.enableValidation(),new r(a.formSelectorCard,a).enableValidation(),Promise.all([$.getInitialCards(),X.getUserInfoFromServer()]).then((function(e){var t,n,r=(t=e,n=1,function(e){if(Array.isArray(e))return e}(t)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var a,c=e[Symbol.iterator]();!(r=(a=c.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==c.return||c.return()}finally{if(o)throw i}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return J(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?J(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0];Y.renderItems(r)})).catch((function(e){console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._selector=e,this._cardimage=n.link,this._cardTitle=n.name,this._cardLikes=n.likes,this._cardId=n._id,this._ownerId=n.owner._id,this._handleCardClick=r,this._handleTrashClick=o,this._apiPraktikum=i,this._userId=a}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._selector).content.cloneNode(!0)}},{key:"_deleteCardHandler",value:function(e){e.target.parentNode.remove()}},{key:"_setListeners",value:function(){var e=this;this._element.querySelector(".card__trash").addEventListener("click",(function(t){var n=t.target.parentNode;e._handleTrashClick(n)})),this._element.querySelector(".card__image").addEventListener("click",(function(){e._handleCardClick(e._cardimage,e._cardTitle)})),this._element.querySelector(".card__like").addEventListener("click",(function(t){t.target.classList.toggle("card__like_active");var n=t.target.parentNode,r=n.querySelector(".card__like_active"),o=n.querySelector(".card__counter-like");e._handleCountLikes(e._cardId,o,r)}))}},{key:"_toggleCounterLikes",value:function(e,t){e.textContent=t.likes.length}},{key:"_handleCountLikes",value:function(e,t,n){var r=this;null==n?this._apiPraktikum.deleteLike(e).then((function(e){r._toggleCounterLikes(t,e)})).catch((function(e){console.log(e)})):this._apiPraktikum.putLike(e).then((function(e){r._toggleCounterLikes(t,e)})).catch((function(e){console.log(e)}))}},{key:"_hideTrashIcon",value:function(e,t){var n=this._element.querySelector(".card__trash");this._ownerId!==this._userId&&(n.src="",n.alt="")}},{key:"_highlightLikes",value:function(){var e=this,t=this._element.querySelector(".card__like");this._cardLikes.find((function(n){n._id==e._userId&&t.classList.toggle("card__like_active")}))}},{key:"getElement",value:function(){this._element=this._getTemplate(),this._element.querySelector(".card").id=this._cardId;var e=this._element.querySelector(".card__image"),t=this._element.querySelector(".card__counter-like");return e.src=this._cardimage,e.alt=this._cardTitle,t.textContent=this._cardLikes.length,this._highlightLikes(),this._element.querySelector(".card__title").textContent=this._cardTitle,this._hideTrashIcon(this._ownerId,this._userId),this._setListeners(),this._element}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=document.querySelector(t),this._object=n,this._inputSelector=n.inputSelector,this._submitButtonSelector=n.submitButtonSelector,this._inactiveButtonClass=n.inactiveButtonClass,this._errorClass=n.errorClass,this._inputErrorClass=n.inputErrorClass,this._formProfileInputsSelector=n.formProfileInputsSelector,this._formProfileInputsErrorsSelector=n.formProfileInputsErrorsSelector}var t,r;return t=e,(r=[{key:"_showInputError",value:function(e,t,n){var r=e.querySelector("#".concat(t.id,"-error"));r.textContent=n,r.classList.add(this._object.errorClass),t.classList.add(this._object.inputErrorClass)}},{key:"_hideInputError",value:function(e,t){var n=e.querySelector("#".concat(t.id,"-error"));n.textContent="",n.classList.remove(this._object.errorClass),t.classList.remove(this._object.inputErrorClass)}},{key:"_getErrorMessage",value:function(e){return e.validationMessage}},{key:"_checkInputValidity",value:function(e,t){if(t.validity.valid)this._hideInputError(e,t);else{var n=this._getErrorMessage(t);this._showInputError(e,t,n)}}},{key:"_hasInValidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){t?(e.classList.add(this._object.inactiveButtonClass),e.setAttribute("disabled",!0)):(e.classList.remove(this._object.inactiveButtonClass),e.removeAttribute("disabled"))}},{key:"_setEventListeners",value:function(e){var t=this,n=Array.from(e.querySelectorAll(this._object.inputSelector)),r=e.querySelector(this._object.submitButtonSelector);n.forEach((function(o){o.addEventListener("input",(function(){t._checkInputValidity(e,o);var i=t._hasInValidInput(n);t._toggleButtonState(r,i)}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners(this._formElement,this._object)}},{key:"clearProfileErrors",value:function(){var e=this,t=document.querySelectorAll(this._formProfileInputsSelector),n=document.querySelector(this._submitButtonSelector),r=document.querySelectorAll(this._formProfileInputsErrorsSelector);0!==t.length&&(t.forEach((function(t){t.classList.remove(e._inputErrorClass)})),n.classList.remove(this._inactiveButtonClass),0!==r.length&&r.forEach((function(t){t.classList.remove(e._errorClass)})))}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._containerSelector=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(e,t){var n=this;e.forEach((function(e){n._renderer(e,t)}))}},{key:"addItem",value:function(e,t){t?this._containerSelector.append(e):this._containerSelector.prepend(e)}}])&&o(t.prototype,n),e}(),a={formSelector:".popup_type_edit-user-profile",formSelectorCard:".popup_type_new-cards",formProfileInputsSelector:".popup__input_type_error",formProfileInputsErrorsSelector:".popup__input-error",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__submit_inactive",errorClass:"popup__input-error_active",inputErrorClass:"popup__input_type_error"},c=".overlay",u=document.querySelector(".profile__name-edit"),s=document.querySelector(".profile__vector"),l=document.querySelector(".elements"),f=document.querySelector(".profile__name"),p=document.querySelector(".profile__description"),h=document.querySelector(".popup__item_profile_name"),d=document.querySelector(".popup__item_profile_job"),_=document.querySelector(".popup_cards__submit"),y=(document.querySelector(".profile__image"),document.querySelector(".profile__photo_container"));function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._overlay=document.querySelector(n)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),this._overlay.classList.add("overlay_visible"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),this._overlay.classList.remove("overlay_visible"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){e.preventDefault(),"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("click",(function(t){t.target.classList.contains("popup__close")&&e.close()})),this._overlay.addEventListener("click",(function(t){t.target===t.currentTarget&&e.close()}))}}])&&v(t.prototype,n),e}();function b(e){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(e,t,n){return(k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function E(e,t){return(E=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function S(e,t){return!t||"object"!==b(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function w(e){return(w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&E(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e,t))._popupImageBigImageElement=n._popupElement.querySelector(".popup__image"),n._popupCaptionImageBigImageElement=n._popupElement.querySelector(".popup__caption"),n}return t=a,(n=[{key:"open",value:function(e,t){k(w(a.prototype),"open",this).call(this),this._popupImageBigImageElement.alt=t,this._popupImageBigImageElement.src=e,this._popupCaptionImageBigImageElement.textContent=t}}])&&g(t.prototype,n),a}(m);function C(e){return(C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function O(e,t,n){return(O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function P(e,t){return(P=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function j(e,t){return!t||"object"!==C(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function q(e){return(q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&P(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return j(this,e)});function a(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e,t))._handleFormSubmit=n,r}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._popupElement.querySelectorAll(".popup__input").forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;O(q(a.prototype),"setEventListeners",this).call(this),this._popupElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){O(q(a.prototype),"close",this).call(this),this._popupElement.reset()}},{key:"renderLoading",value:function(e){this._popupElement.querySelector(".popup__submit").innerHTML=e?"Сохранение...":"Сохранить"}}])&&I(t.prototype,n),a}(m);function T(e){return(T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function U(e,t,n){return(U="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function A(e,t){return(A=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function B(e,t){return!t||"object"!==T(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function x(e){return(x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var N=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&A(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return B(this,e)});function a(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e,t)).handleFormWithDeleteSubmit=n,r}return t=a,(n=[{key:"setEventListeners",value:function(e){var t=this;U(x(a.prototype),"setEventListeners",this).call(this),this._popupElement.addEventListener("submit",(function(n){n.preventDefault(),t.handleFormWithDeleteSubmit(e)}))}}])&&D(t.prototype,n),a}(m);function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var M=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selectorName=t,this._selectorDescription=n,this._avatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._selectorName.textContent,userDescription:this._selectorDescription.textContent}}},{key:"setUserInfo",value:function(e,t){var n=e,r=t;this._selectorName.textContent=n,this._selectorDescription.textContent=r}},{key:"setUserAvatar",value:function(e){this._avatar.src=e}}])&&V(t.prototype,n),e}();function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function H(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function J(e){G.open(),G.setEventListeners(e)}function W(e,t){Z.open(e,t)}var z=new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers}var t,n;return t=e,(n=[{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getProfileInfo",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(t){return e._getResponseData(t)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(t){return e._getResponseData(t)}))}},{key:"setNewProfile",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify(e)}).then((function(e){return t._getResponseData(e)}))}},{key:"postCardOnTheServer",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify(e)}).then((function(e){return t._getResponseData(e)}))}},{key:"changeAvatar",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify(e)}).then((function(e){return t._getResponseData(e)}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this.headers})}},{key:"putLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then((function(e){return t._getResponseData(e)})).then((function(e){return e}))}},{key:"deleteLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return t._getResponseData(e)})).then((function(e){return e}))}}])&&F(t.prototype,n),e}())({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-19",headers:{authorization:"62377db5-e458-4bf1-a2a6-d8b8f8bb8a60","Content-Type":"application/json"}}),$=new R(".popup_type_edit-user-profile",c,(function(){var e={name:h.value,about:d.value};$.renderLoading(!0),z.setNewProfile(e).then((function(){Q.setUserInfo(e.name,e.about),$.close()})).catch((function(e){console.log(e)})).finally((function(){$.renderLoading(!1)}))})),G=new N(".popup_type_removing_card",c,(function(e){z.deleteCard(e.id).then((function(){e.remove(),G.close()})).catch((function(e){console.log(e)}))})),K=new R(".popup_type_editing_photo_profile",c,(function(e){K.renderLoading(!0),z.changeAvatar(e).then((function(){Q.setUserAvatar(e.avatar),K.close()})).catch((function(e){console.log(e)})).finally((function(){K.renderLoading(!1)}))})),Q=new M(f,p,".profile__image"),X=new i({renderer:function(e,t){var n=ee(e,t);X.addItem(n,!0)}},l),Y=new R(".popup_type_new-cards",c,(function(e){Y.renderLoading(!0),z.postCardOnTheServer(e).then((function(e){var t=ee(e,e.owner._id);X.addItem(t),_.classList.add(a.inactiveButtonClass),Y.close()})).catch((function(e){console.log(e)})).finally((function(){Y.renderLoading(!1)}))})),Z=new L(".popup_type_image",c);function ee(e,n){return new t(".card-template",e,W,J,z,n).getElement()}K.setEventListeners(),$.setEventListeners(),Y.setEventListeners(),Z.setEventListeners(),y.addEventListener("click",(function(){K.open()})),u.addEventListener("click",(function(){$.open(),te.clearProfileErrors();var e=Q.getUserInfo();h.value=e.userName,d.value=e.userDescription})),s.addEventListener("click",(function(){Y.open(),te.clearProfileErrors(),_.classList.add(a.inactiveButtonClass)})),y.addEventListener("click",(function(){K.open()}));var te=new r(a.formSelector,a);te.enableValidation(),new r(a.formSelectorCard,a).enableValidation(),Promise.all([z.getInitialCards(),z.getProfileInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var a,c=e[Symbol.iterator]();!(r=(a=c.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==c.return||c.return()}finally{if(o)throw i}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return H(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?H(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1],a=i._id;X.renderItems(o,a),Q.setUserInfo(i.name,i.about),Q.setUserAvatar(i.avatar)})).catch((function(e){console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,